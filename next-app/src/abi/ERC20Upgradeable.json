{
    "abi": [
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                },
                {
                    "name": "symbol",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Initialized",
            "inputs": [
                {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "ERC20InsufficientAllowance",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "allowance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientBalance",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "needed",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidApprover",
            "inputs": [
                {
                    "name": "approver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidReceiver",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSender",
            "inputs": [
                {
                    "name": "sender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSpender",
            "inputs": [
                {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "InvalidInitialization",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotInitializing",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600f57600080fd5b50610c5a8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f19146101425780634cd88b761461015757806370a082311461016a57806395d89b41146101a0578063a9059cbb146101a8578063dd62ed3e146101bb57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610120578063313ce56714610133575b600080fd5b6100b66101ce565b6040516100c3919061086c565b60405180910390f35b6100df6100da3660046108d7565b610291565b60405190151581526020016100c3565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100c3565b6100df61012e366004610901565b6102ab565b604051601281526020016100c3565b6101556101503660046108d7565b6102cf565b005b6101556101653660046109e0565b6102dd565b610112610178366004610a44565b6001600160a01b03166000908152600080516020610c05833981519152602052604090205490565b6100b66103ef565b6100df6101b63660046108d7565b61042e565b6101126101c9366004610a66565b61043c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020610c058339815191529161020d90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610a99565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505091505090565b60003361029f818585610486565b60019150505b92915050565b6000336102b9858285610498565b6102c4858585610503565b506001949350505050565b6102d98282610562565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103235750825b905060008267ffffffffffffffff1660011480156103405750303b155b90508115801561034e575080155b1561036c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561039657845460ff60401b1916600160401b1785555b6103a08787610598565b83156103e657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020610c058339815191529161020d90610a99565b60003361029f818585610503565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61049383838360016105aa565b505050565b60006104a4848461043c565b905060001981146104fd57818110156104ee57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104fd848484840360006105aa565b50505050565b6001600160a01b03831661052d57604051634b637e8f60e11b8152600060048201526024016104e5565b6001600160a01b0382166105575760405163ec442f0560e01b8152600060048201526024016104e5565b610493838383610692565b6001600160a01b03821661058c5760405163ec442f0560e01b8152600060048201526024016104e5565b6102d960008383610692565b6105a06107d0565b6102d9828261081b565b600080516020610c058339815191526001600160a01b0385166105e35760405163e602df0560e01b8152600060048201526024016104e5565b6001600160a01b03841661060d57604051634a1406b160e11b8152600060048201526024016104e5565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561068b57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161068291815260200190565b60405180910390a35b5050505050565b600080516020610c058339815191526001600160a01b0384166106ce57818160020160008282546106c39190610ad3565b909155506107409050565b6001600160a01b038416600090815260208290526040902054828110156107215760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104e5565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b03831661075e57600281018054839003905561077d565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107c291815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661081957604051631afcd79f60e31b815260040160405180910390fd5b565b6108236107d0565b600080516020610c058339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361085d8482610b44565b50600481016104fd8382610b44565b60006020808352835180602085015260005b8181101561089a5785810183015185820160400152820161087e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108d257600080fd5b919050565b600080604083850312156108ea57600080fd5b6108f3836108bb565b946020939093013593505050565b60008060006060848603121561091657600080fd5b61091f846108bb565b925061092d602085016108bb565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261096457600080fd5b813567ffffffffffffffff8082111561097f5761097f61093d565b604051601f8301601f19908116603f011681019082821181831017156109a7576109a761093d565b816040528381528660208588010111156109c057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156109f357600080fd5b823567ffffffffffffffff80821115610a0b57600080fd5b610a1786838701610953565b93506020850135915080821115610a2d57600080fd5b50610a3a85828601610953565b9150509250929050565b600060208284031215610a5657600080fd5b610a5f826108bb565b9392505050565b60008060408385031215610a7957600080fd5b610a82836108bb565b9150610a90602084016108bb565b90509250929050565b600181811c90821680610aad57607f821691505b602082108103610acd57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a557634e487b7160e01b600052601160045260246000fd5b601f821115610493576000816000526020600020601f850160051c81016020861015610b1d5750805b601f850160051c820191505b81811015610b3c57828155600101610b29565b505050505050565b815167ffffffffffffffff811115610b5e57610b5e61093d565b610b7281610b6c8454610a99565b84610af4565b602080601f831160018114610ba75760008415610b8f5750858301515b600019600386901b1c1916600185901b178555610b3c565b600085815260208120601f198616915b82811015610bd657888601518255948401946001909101908401610bb7565b5085821015610bf45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a2646970667358221220d6ce0bc34cf5e38b6a59085954510cc2ee5ffe85a527cc55a370a14a14acfaa364736f6c63430008190033",
        "sourceMap": "142:270:45:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f19146101425780634cd88b761461015757806370a082311461016a57806395d89b41146101a0578063a9059cbb146101a8578063dd62ed3e146101bb57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610120578063313ce56714610133575b600080fd5b6100b66101ce565b6040516100c3919061086c565b60405180910390f35b6100df6100da3660046108d7565b610291565b60405190151581526020016100c3565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016100c3565b6100df61012e366004610901565b6102ab565b604051601281526020016100c3565b6101556101503660046108d7565b6102cf565b005b6101556101653660046109e0565b6102dd565b610112610178366004610a44565b6001600160a01b03166000908152600080516020610c05833981519152602052604090205490565b6100b66103ef565b6100df6101b63660046108d7565b61042e565b6101126101c9366004610a66565b61043c565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace038054606091600080516020610c058339815191529161020d90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610a99565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505091505090565b60003361029f818585610486565b60019150505b92915050565b6000336102b9858285610498565b6102c4858585610503565b506001949350505050565b6102d98282610562565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156103235750825b905060008267ffffffffffffffff1660011480156103405750303b155b90508115801561034e575080155b1561036c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561039657845460ff60401b1916600160401b1785555b6103a08787610598565b83156103e657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020610c058339815191529161020d90610a99565b60003361029f818585610503565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61049383838360016105aa565b505050565b60006104a4848461043c565b905060001981146104fd57818110156104ee57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6104fd848484840360006105aa565b50505050565b6001600160a01b03831661052d57604051634b637e8f60e11b8152600060048201526024016104e5565b6001600160a01b0382166105575760405163ec442f0560e01b8152600060048201526024016104e5565b610493838383610692565b6001600160a01b03821661058c5760405163ec442f0560e01b8152600060048201526024016104e5565b6102d960008383610692565b6105a06107d0565b6102d9828261081b565b600080516020610c058339815191526001600160a01b0385166105e35760405163e602df0560e01b8152600060048201526024016104e5565b6001600160a01b03841661060d57604051634a1406b160e11b8152600060048201526024016104e5565b6001600160a01b0380861660009081526001830160209081526040808320938816835292905220839055811561068b57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161068291815260200190565b60405180910390a35b5050505050565b600080516020610c058339815191526001600160a01b0384166106ce57818160020160008282546106c39190610ad3565b909155506107409050565b6001600160a01b038416600090815260208290526040902054828110156107215760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016104e5565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b03831661075e57600281018054839003905561077d565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107c291815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661081957604051631afcd79f60e31b815260040160405180910390fd5b565b6108236107d0565b600080516020610c058339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361085d8482610b44565b50600481016104fd8382610b44565b60006020808352835180602085015260005b8181101561089a5785810183015185820160400152820161087e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108d257600080fd5b919050565b600080604083850312156108ea57600080fd5b6108f3836108bb565b946020939093013593505050565b60008060006060848603121561091657600080fd5b61091f846108bb565b925061092d602085016108bb565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261096457600080fd5b813567ffffffffffffffff8082111561097f5761097f61093d565b604051601f8301601f19908116603f011681019082821181831017156109a7576109a761093d565b816040528381528660208588010111156109c057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156109f357600080fd5b823567ffffffffffffffff80821115610a0b57600080fd5b610a1786838701610953565b93506020850135915080821115610a2d57600080fd5b50610a3a85828601610953565b9150509250929050565b600060208284031215610a5657600080fd5b610a5f826108bb565b9392505050565b60008060408385031215610a7957600080fd5b610a82836108bb565b9150610a90602084016108bb565b90509250929050565b600181811c90821680610aad57607f821691505b602082108103610acd57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102a557634e487b7160e01b600052601160045260246000fd5b601f821115610493576000816000526020600020601f850160051c81016020861015610b1d5750805b601f850160051c820191505b81811015610b3c57828155600101610b29565b505050505050565b815167ffffffffffffffff811115610b5e57610b5e61093d565b610b7281610b6c8454610a99565b84610af4565b602080601f831160018114610ba75760008415610b8f5750858301515b600019600386901b1c1916600185901b178555610b3c565b600085815260208120601f198616915b82811015610bd657888601518255948401946001909101908401610bb7565b5085821015610bf45787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a2646970667358221220d6ce0bc34cf5e38b6a59085954510cc2ee5ffe85a527cc55a370a14a14acfaa364736f6c63430008190033",
        "sourceMap": "142:270:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:54;;1162:22;1144:41;;1132:2;1117:18;5210:186:23;1004:187:54;3896:152:23;4027:14;;3896:152;;;1342:25:54;;;1330:2;1315:18;3896:152:23;1196:177:54;5988:244:23;;;;;;:::i;:::-;;:::i;3754:82::-;;;3827:2;1853:36:54;;1841:2;1826:18;3754:82:23;1711:184:54;322:87:45;;;;;;:::i;:::-;;:::i;:::-;;188:126;;;;;;:::i;:::-;;:::i;4106:171:23:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4250:20:23;4171:7;4250:20;;;-1:-1:-1;;;;;;;;;;;4250:20:23;;;;;;;4106:171;2973:148;;;:::i;4472:178::-;;;;;;:::i;:::-;;:::i;4708:195::-;;;;;;:::i;:::-;;:::i;2716:144::-;2846:7;2839:14;;2761:13;;-1:-1:-1;;;;;;;;;;;2064:20:23;2839:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;966:10:24;5337:31:23;966:10:24;5353:7:23;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;;:::o;5988:244::-;6075:4;966:10:24;6131:37:23;6147:4;966:10:24;6162:5:23;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;-1:-1:-1;6221:4:23;;5988:244;-1:-1:-1;;;;5988:244:23:o;322:87:45:-;384:17;390:2;394:6;384:5;:17::i;:::-;322:87;;:::o;188:126::-;8870:21:22;4302:15;;-1:-1:-1;;;4302:15:22;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:22;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:22;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:22;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:22;-1:-1:-1;;;5013:22:22;;;4979:67;280:26:45::1;293:4;299:6;280:12;:26::i;:::-;5070:14:22::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:22;;;5142:14;;-1:-1:-1;4298:50:54;;5142:14:22;;4286:2:54;4271:18;5142:14:22;;;;;;;5066:101;4092:1081;;;;;188:126:45;;:::o;2973:148:23:-;3105:9;3098:16;;3020:13;;-1:-1:-1;;;;;;;;;;;2064:20:23;3098:16;;;:::i;4472:178::-;4541:4;966:10:24;4595:27:23;966:10:24;4612:2:23;4616:5;4595:9;:27::i;4708:195::-;-1:-1:-1;;;;;4867:20:23;;;4788:7;4867:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4708:195::o;10001:128::-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;-1:-1:-1;;11910:16:23;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12018:60;;-1:-1:-1;;;12018:60:23;;-1:-1:-1;;;;;4579:32:54;;12018:60:23;;;4561:51:54;4628:18;;;4621:34;;;4671:18;;;4664:34;;;4534:18;;12018:60:23;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11834:388;11745:477;;;:::o;6605:300::-;-1:-1:-1;;;;;6688:18:23;;6684:86;;6729:30;;-1:-1:-1;;;6729:30:23;;6756:1;6729:30;;;4855:51:54;4828:18;;6729:30:23;4709:203:54;6684:86:23;-1:-1:-1;;;;;6783:16:23;;6779:86;;6822:32;;-1:-1:-1;;;6822:32:23;;6851:1;6822:32;;;4855:51:54;4828:18;;6822:32:23;4709:203:54;6779:86:23;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;8733:208::-;-1:-1:-1;;;;;8803:21:23;;8799:91;;8847:32;;-1:-1:-1;;;8847:32:23;;8876:1;8847:32;;;4855:51:54;4828:18;;8847:32:23;4709:203:54;8799:91:23;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;2282:147::-;6931:20:22;:18;:20::i;:::-;2384:38:23::1;2407:5;2414:7;2384:22;:38::i;10976:487::-:0;-1:-1:-1;;;;;;;;;;;;;;;;11141:19:23;;11137:89;;11183:32;;-1:-1:-1;;;11183:32:23;;11212:1;11183:32;;;4855:51:54;4828:18;;11183:32:23;4709:203:54;11137:89:23;-1:-1:-1;;;;;11239:21:23;;11235:90;;11283:31;;-1:-1:-1;;;11283:31:23;;11311:1;11283:31;;;4855:51:54;4828:18;;11283:31:23;4709:203:54;11235:90:23;-1:-1:-1;;;;;11334:20:23;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11381:76;;;;11431:7;-1:-1:-1;;;;;11415:31:23;11424:5;-1:-1:-1;;;;;11415:31:23;;11440:5;11415:31;;;;1342:25:54;;1330:2;1315:18;;1196:177;11415:31:23;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;7220:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7362:18:23;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7358:546:23;;-1:-1:-1;7358:546:23;;-1:-1:-1;;;;;7574:17:23;;7552:19;7574:17;;;;;;;;;;;7609:19;;;7605:115;;;7655:50;;-1:-1:-1;;;7655:50:23;;-1:-1:-1;;;;;4579:32:54;;7655:50:23;;;4561:51:54;4628:18;;;4621:34;;;4671:18;;;4664:34;;;4534:18;;7655:50:23;4359:345:54;7605:115:23;-1:-1:-1;;;;;7840:17:23;;:11;:17;;;;;;;;;;7860:19;;;;7840:39;;7358:546;-1:-1:-1;;;;;7918:16:23;;7914:429;;8081:14;;;:23;;;;;;;7914:429;;;-1:-1:-1;;;;;8294:15:23;;:11;:15;;;;;;;;;;:24;;;;;;7914:429;8373:2;-1:-1:-1;;;;;8358:25:23;8367:4;-1:-1:-1;;;;;8358:25:23;;8377:5;8358:25;;;;1342::54;;1330:2;1315:18;;1196:177;8358:25:23;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:22:-;8870:21;8560:40;-1:-1:-1;;;8560:40:22;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:22;;;;;;;;;;;7146:73;7084:141::o;2435:216:23:-;6931:20:22;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2600:7:23;:15:::1;2610:5:::0;2600:7;:15:::1;:::i;:::-;-1:-1:-1::0;2625:9:23::1;::::0;::::1;:19;2637:7:::0;2625:9;:19:::1;:::i;14:548:54:-:0;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:54;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:54:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:127::-;1961:10;1956:3;1952:20;1949:1;1942:31;1992:4;1989:1;1982:15;2016:4;2013:1;2006:15;2032:719;2075:5;2128:3;2121:4;2113:6;2109:17;2105:27;2095:55;;2146:1;2143;2136:12;2095:55;2182:6;2169:20;2208:18;2245:2;2241;2238:10;2235:36;;;2251:18;;:::i;:::-;2326:2;2320:9;2294:2;2380:13;;-1:-1:-1;;2376:22:54;;;2400:2;2372:31;2368:40;2356:53;;;2424:18;;;2444:22;;;2421:46;2418:72;;;2470:18;;:::i;:::-;2510:10;2506:2;2499:22;2545:2;2537:6;2530:18;2591:3;2584:4;2579:2;2571:6;2567:15;2563:26;2560:35;2557:55;;;2608:1;2605;2598:12;2557:55;2672:2;2665:4;2657:6;2653:17;2646:4;2638:6;2634:17;2621:54;2719:1;2712:4;2707:2;2699:6;2695:15;2691:26;2684:37;2739:6;2730:15;;;;;;2032:719;;;;:::o;2756:543::-;2844:6;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2961:9;2948:23;2990:18;3031:2;3023:6;3020:14;3017:34;;;3047:1;3044;3037:12;3017:34;3070:50;3112:7;3103:6;3092:9;3088:22;3070:50;:::i;:::-;3060:60;;3173:2;3162:9;3158:18;3145:32;3129:48;;3202:2;3192:8;3189:16;3186:36;;;3218:1;3215;3208:12;3186:36;;3241:52;3285:7;3274:8;3263:9;3259:24;3241:52;:::i;:::-;3231:62;;;2756:543;;;;;:::o;3304:186::-;3363:6;3416:2;3404:9;3395:7;3391:23;3387:32;3384:52;;;3432:1;3429;3422:12;3384:52;3455:29;3474:9;3455:29;:::i;:::-;3445:39;3304:186;-1:-1:-1;;;3304:186:54:o;3495:260::-;3563:6;3571;3624:2;3612:9;3603:7;3599:23;3595:32;3592:52;;;3640:1;3637;3630:12;3592:52;3663:29;3682:9;3663:29;:::i;:::-;3653:39;;3711:38;3745:2;3734:9;3730:18;3711:38;:::i;:::-;3701:48;;3495:260;;;;;:::o;3760:380::-;3839:1;3835:12;;;;3882;;;3903:61;;3957:4;3949:6;3945:17;3935:27;;3903:61;4010:2;4002:6;3999:14;3979:18;3976:38;3973:161;;4056:10;4051:3;4047:20;4044:1;4037:31;4091:4;4088:1;4081:15;4119:4;4116:1;4109:15;3973:161;;3760:380;;;:::o;4917:222::-;4982:9;;;5003:10;;;5000:133;;;5055:10;5050:3;5046:20;5043:1;5036:31;5090:4;5087:1;5080:15;5118:4;5115:1;5108:15;5270:543;5372:2;5367:3;5364:11;5361:446;;;5408:1;5432:5;5429:1;5422:16;5476:4;5473:1;5463:18;5546:2;5534:10;5530:19;5527:1;5523:27;5517:4;5513:38;5582:4;5570:10;5567:20;5564:47;;;-1:-1:-1;5605:4:54;5564:47;5660:2;5655:3;5651:12;5648:1;5644:20;5638:4;5634:31;5624:41;;5715:82;5733:2;5726:5;5723:13;5715:82;;;5778:17;;;5759:1;5748:13;5715:82;;;5719:3;;;5270:543;;;:::o;5989:1345::-;6115:3;6109:10;6142:18;6134:6;6131:30;6128:56;;;6164:18;;:::i;:::-;6193:97;6283:6;6243:38;6275:4;6269:11;6243:38;:::i;:::-;6237:4;6193:97;:::i;:::-;6345:4;;6402:2;6391:14;;6419:1;6414:663;;;;7121:1;7138:6;7135:89;;;-1:-1:-1;7190:19:54;;;7184:26;7135:89;-1:-1:-1;;5946:1:54;5942:11;;;5938:24;5934:29;5924:40;5970:1;5966:11;;;5921:57;7237:81;;6384:944;;6414:663;5217:1;5210:14;;;5254:4;5241:18;;-1:-1:-1;;6450:20:54;;;6568:236;6582:7;6579:1;6576:14;6568:236;;;6671:19;;;6665:26;6650:42;;6763:27;;;;6731:1;6719:14;;;;6598:19;;6568:236;;;6572:3;6832:6;6823:7;6820:19;6817:201;;;6893:19;;;6887:26;-1:-1:-1;;6976:1:54;6972:14;;;6988:3;6968:24;6964:37;6960:42;6945:58;6930:74;;6817:201;-1:-1:-1;;;;;7064:1:54;7048:14;;;7044:22;7031:36;;-1:-1:-1;5989:1345:54:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "initialize(string,string)": "4cd88b76",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GensToken.sol\":\"GensToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5a5f22721ffb66d3e1ecc568c0d37c91f91223d8663c8a5e78396e780b849c72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdd108133c98ea251513424bf17905090c8a7e0755562a6d12a81b8bccbd6152\",\"dweb:/ipfs/QmahpnB63Up9aVx4jDqxEgry5BRN5itHRvy9rwBvMT2yqL\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"src/GensToken.sol\":{\"keccak256\":\"0xef8bcfdfbef520ad0b54b8c020ff176dcd15bbcd65f6a72961a8fd2bdf2870fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b605aee0b2f9e0df66f800045e43712bf0cdaf6ef8c968d5ed8c6a6b2478bc\",\"dweb:/ipfs/QmYPHJPKKEgACVdrgDa2L2U2Kc797Vq9Lf69WR8KHdbjhA\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.25+commit.b61c2a91"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "allowance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "balance",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "needed",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "approver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidInitialization"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotInitializing"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "version",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "name",
                            "type": "string"
                        },
                        {
                            "internalType": "string",
                            "name": "symbol",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "allowance(address,address)": {
                        "details": "See {IERC20-allowance}."
                    },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "balanceOf(address)": {
                        "details": "See {IERC20-balanceOf}."
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "name()": {
                        "details": "Returns the name of the token."
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": {
                        "details": "See {IERC20-totalSupply}."
                    },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {},
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/GensToken.sol": "GensToken"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
                "urls": [
                    "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
                    "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
                "keccak256": "0x5a5f22721ffb66d3e1ecc568c0d37c91f91223d8663c8a5e78396e780b849c72",
                "urls": [
                    "bzz-raw://bdd108133c98ea251513424bf17905090c8a7e0755562a6d12a81b8bccbd6152",
                    "dweb:/ipfs/QmahpnB63Up9aVx4jDqxEgry5BRN5itHRvy9rwBvMT2yqL"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
                "urls": [
                    "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
                    "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
                "urls": [
                    "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
                    "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
                ],
                "license": "MIT"
            },
            "src/GensToken.sol": {
                "keccak256": "0xef8bcfdfbef520ad0b54b8c020ff176dcd15bbcd65f6a72961a8fd2bdf2870fb",
                "urls": [
                    "bzz-raw://e9b605aee0b2f9e0df66f800045e43712bf0cdaf6ef8c968d5ed8c6a6b2478bc",
                    "dweb:/ipfs/QmYPHJPKKEgACVdrgDa2L2U2Kc797Vq9Lf69WR8KHdbjhA"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [],
        "types": {}
    },
    "ast": {
        "absolutePath": "src/GensToken.sol",
        "id": 54837,
        "exportedSymbols": {
            "ContextUpgradeable": [
                46679
            ],
            "ERC20Upgradeable": [
                46633
            ],
            "GensToken": [
                54836
            ],
            "IERC20": [
                50288
            ],
            "IERC20Errors": [
                49600
            ],
            "IERC20Metadata": [
                50314
            ],
            "Initializable": [
                46016
            ]
        },
        "nodeType": "SourceUnit",
        "src": "33:381:45",
        "nodes": [
            {
                "id": 54804,
                "nodeType": "PragmaDirective",
                "src": "33:23:45",
                "nodes": [],
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ]
            },
            {
                "id": 54805,
                "nodeType": "ImportDirective",
                "src": "60:78:45",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
                "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 54837,
                "sourceUnit": 46634,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 54836,
                "nodeType": "ContractDefinition",
                "src": "142:270:45",
                "nodes": [
                    {
                        "id": 54822,
                        "nodeType": "FunctionDefinition",
                        "src": "188:126:45",
                        "nodes": [],
                        "body": {
                            "id": 54821,
                            "nodeType": "Block",
                            "src": "269:45:45",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 54817,
                                                "name": "name",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54809,
                                                "src": "293:4:45",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "id": 54818,
                                                "name": "symbol",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54811,
                                                "src": "299:6:45",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 54816,
                                            "name": "__ERC20_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46084,
                                            "src": "280:12:45",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 54819,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "280:26:45",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 54820,
                                    "nodeType": "ExpressionStatement",
                                    "src": "280:26:45"
                                }
                            ]
                        },
                        "functionSelector": "4cd88b76",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 54814,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 54813,
                                    "name": "initializer",
                                    "nameLocations": [
                                        "257:11:45"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 45870,
                                    "src": "257:11:45"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "257:11:45"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "197:10:45",
                        "parameters": {
                            "id": 54812,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 54809,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "222:4:45",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54822,
                                    "src": "208:18:45",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 54808,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "208:6:45",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 54811,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "242:6:45",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54822,
                                    "src": "228:20:45",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 54810,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "228:6:45",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "207:42:45"
                        },
                        "returnParameters": {
                            "id": 54815,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "269:0:45"
                        },
                        "scope": 54836,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 54835,
                        "nodeType": "FunctionDefinition",
                        "src": "322:87:45",
                        "nodes": [],
                        "body": {
                            "id": 54834,
                            "nodeType": "Block",
                            "src": "373:36:45",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 54830,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54824,
                                                "src": "390:2:45",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 54831,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 54826,
                                                "src": "394:6:45",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 54829,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46465,
                                            "src": "384:5:45",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 54832,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "384:17:45",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 54833,
                                    "nodeType": "ExpressionStatement",
                                    "src": "384:17:45"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "331:4:45",
                        "parameters": {
                            "id": 54827,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 54824,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "344:2:45",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54835,
                                    "src": "336:10:45",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 54823,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "336:7:45",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 54826,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "356:6:45",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54835,
                                    "src": "348:14:45",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 54825,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "348:7:45",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "335:28:45"
                        },
                        "returnParameters": {
                            "id": 54828,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "373:0:45"
                        },
                        "scope": 54836,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 54806,
                            "name": "ERC20Upgradeable",
                            "nameLocations": [
                                "164:16:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46633,
                            "src": "164:16:45"
                        },
                        "id": 54807,
                        "nodeType": "InheritanceSpecifier",
                        "src": "164:16:45"
                    }
                ],
                "canonicalName": "GensToken",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    54836,
                    46633,
                    49600,
                    50314,
                    50288,
                    46679,
                    46016
                ],
                "name": "GensToken",
                "nameLocation": "151:9:45",
                "scope": 54837,
                "usedErrors": [
                    45779,
                    45782,
                    49570,
                    49575,
                    49580,
                    49589,
                    49594,
                    49599
                ],
                "usedEvents": [
                    45787,
                    50222,
                    50231
                ]
            }
        ],
        "license": "MIT"
    },
    "id": 45
}